// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Player renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Player
    playerChoice={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Player__panel"
>
          <header>
                    <h1
                              className="Player__title"
                    >
                              Player
                    </h1>
          </header>
          <div
                    className="Player__choice"
          >
                    <h2
                              className="Player__ChosenShape"
                    />
          </div>
</div>,
        <div
          className="Player__choiceButtons"
>
          <h3
                    className="Player__choiceButtonsTitle"
          >
                    Choose your shape:
          </h3>
          <div>
                    <button
                              className="Player__button Player__button--rock btn"
                              onClick={[Function]}
                    >
                              Rock
                    </button>
                    <button
                              className="Player__button Player__button--paper btn"
                              onClick={[Function]}
                    >
                              Paper
                    </button>
                    <button
                              className="Player__button Player__button--scissors btn"
                              onClick={[Function]}
                    >
                              Scissors
                    </button>
          </div>
</div>,
      ],
      "className": "Player",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header>
              <h1
                            className="Player__title"
              >
                            Player
              </h1>
</header>,
            <div
              className="Player__choice"
>
              <h2
                            className="Player__ChosenShape"
              />
</div>,
          ],
          "className": "Player__panel",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="Player__title"
>
                Player
</h1>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Player",
                "className": "Player__title",
              },
              "ref": null,
              "rendered": "Player",
              "type": "h1",
            },
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h2
                className="Player__ChosenShape"
/>,
              "className": "Player__choice",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "Player__ChosenShape",
              },
              "ref": null,
              "rendered": null,
              "type": "h2",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="Player__choiceButtonsTitle"
>
              Choose your shape:
</h3>,
            <div>
              <button
                            className="Player__button Player__button--rock btn"
                            onClick={[Function]}
              >
                            Rock
              </button>
              <button
                            className="Player__button Player__button--paper btn"
                            onClick={[Function]}
              >
                            Paper
              </button>
              <button
                            className="Player__button Player__button--scissors btn"
                            onClick={[Function]}
              >
                            Scissors
              </button>
</div>,
          ],
          "className": "Player__choiceButtons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose your shape:",
              "className": "Player__choiceButtonsTitle",
            },
            "ref": null,
            "rendered": "Choose your shape:",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="Player__button Player__button--rock btn"
                  onClick={[Function]}
>
                  Rock
</button>,
                <button
                  className="Player__button Player__button--paper btn"
                  onClick={[Function]}
>
                  Paper
</button>,
                <button
                  className="Player__button Player__button--scissors btn"
                  onClick={[Function]}
>
                  Scissors
</button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Rock",
                  "className": "Player__button Player__button--rock btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Rock",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Paper",
                  "className": "Player__button Player__button--paper btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Paper",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Scissors",
                  "className": "Player__button Player__button--scissors btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Scissors",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Player__panel"
>
            <header>
                        <h1
                                    className="Player__title"
                        >
                                    Player
                        </h1>
            </header>
            <div
                        className="Player__choice"
            >
                        <h2
                                    className="Player__ChosenShape"
                        />
            </div>
</div>,
          <div
            className="Player__choiceButtons"
>
            <h3
                        className="Player__choiceButtonsTitle"
            >
                        Choose your shape:
            </h3>
            <div>
                        <button
                                    className="Player__button Player__button--rock btn"
                                    onClick={[Function]}
                        >
                                    Rock
                        </button>
                        <button
                                    className="Player__button Player__button--paper btn"
                                    onClick={[Function]}
                        >
                                    Paper
                        </button>
                        <button
                                    className="Player__button Player__button--scissors btn"
                                    onClick={[Function]}
                        >
                                    Scissors
                        </button>
            </div>
</div>,
        ],
        "className": "Player",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header>
                <h1
                                className="Player__title"
                >
                                Player
                </h1>
</header>,
              <div
                className="Player__choice"
>
                <h2
                                className="Player__ChosenShape"
                />
</div>,
            ],
            "className": "Player__panel",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1
                  className="Player__title"
>
                  Player
</h1>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Player",
                  "className": "Player__title",
                },
                "ref": null,
                "rendered": "Player",
                "type": "h1",
              },
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h2
                  className="Player__ChosenShape"
/>,
                "className": "Player__choice",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "Player__ChosenShape",
                },
                "ref": null,
                "rendered": null,
                "type": "h2",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="Player__choiceButtonsTitle"
>
                Choose your shape:
</h3>,
              <div>
                <button
                                className="Player__button Player__button--rock btn"
                                onClick={[Function]}
                >
                                Rock
                </button>
                <button
                                className="Player__button Player__button--paper btn"
                                onClick={[Function]}
                >
                                Paper
                </button>
                <button
                                className="Player__button Player__button--scissors btn"
                                onClick={[Function]}
                >
                                Scissors
                </button>
</div>,
            ],
            "className": "Player__choiceButtons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose your shape:",
                "className": "Player__choiceButtonsTitle",
              },
              "ref": null,
              "rendered": "Choose your shape:",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="Player__button Player__button--rock btn"
                    onClick={[Function]}
>
                    Rock
</button>,
                  <button
                    className="Player__button Player__button--paper btn"
                    onClick={[Function]}
>
                    Paper
</button>,
                  <button
                    className="Player__button Player__button--scissors btn"
                    onClick={[Function]}
>
                    Scissors
</button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Rock",
                    "className": "Player__button Player__button--rock btn",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Rock",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Paper",
                    "className": "Player__button Player__button--paper btn",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Paper",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Scissors",
                    "className": "Player__button Player__button--scissors btn",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Scissors",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
