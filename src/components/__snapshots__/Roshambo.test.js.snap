// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Roshambo renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Roshambo />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="Roshambo-header"
>
          <img
                    alt="logo"
                    className="Roshambo-logo"
                    src="logo.svg"
          />
          <h1
                    className="Roshambo-title"
          >
                    Welcome to Roshambo
          </h1>
</header>,
        <p
          className="Roshambo-intro"
>
          To get started, edit 
          <code>
                    src/Roshambo.js
          </code>
           and save to reload.
</p>,
        <div>
          <Player
                    playerChoice={[Function]}
          />
          <Scoreboard
                    resetGame={[Function]}
                    score={
                              Object {
                                        "draw": 0,
                                        "loss": 0,
                                        "win": 0,
                                      }
                    }
          />
          <Computer />
</div>,
      ],
      "className": "Roshambo",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="Roshambo-logo"
              src="logo.svg"
/>,
            <h1
              className="Roshambo-title"
>
              Welcome to Roshambo
</h1>,
          ],
          "className": "Roshambo-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "Roshambo-logo",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to Roshambo",
              "className": "Roshambo-title",
            },
            "ref": null,
            "rendered": "Welcome to Roshambo",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "To get started, edit ",
            <code>
              src/Roshambo.js
</code>,
            " and save to reload.",
          ],
          "className": "Roshambo-intro",
        },
        "ref": null,
        "rendered": Array [
          "To get started, edit ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "src/Roshambo.js",
            },
            "ref": null,
            "rendered": "src/Roshambo.js",
            "type": "code",
          },
          " and save to reload.",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Player
              playerChoice={[Function]}
/>,
            <Scoreboard
              resetGame={[Function]}
              score={
                            Object {
                                          "draw": 0,
                                          "loss": 0,
                                          "win": 0,
                                        }
              }
/>,
            <Computer />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "playerChoice": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "resetGame": [Function],
              "score": Object {
                "draw": 0,
                "loss": 0,
                "win": 0,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="Roshambo-header"
>
            <img
                        alt="logo"
                        className="Roshambo-logo"
                        src="logo.svg"
            />
            <h1
                        className="Roshambo-title"
            >
                        Welcome to Roshambo
            </h1>
</header>,
          <p
            className="Roshambo-intro"
>
            To get started, edit 
            <code>
                        src/Roshambo.js
            </code>
             and save to reload.
</p>,
          <div>
            <Player
                        playerChoice={[Function]}
            />
            <Scoreboard
                        resetGame={[Function]}
                        score={
                                    Object {
                                                "draw": 0,
                                                "loss": 0,
                                                "win": 0,
                                              }
                        }
            />
            <Computer />
</div>,
        ],
        "className": "Roshambo",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="Roshambo-logo"
                src="logo.svg"
/>,
              <h1
                className="Roshambo-title"
>
                Welcome to Roshambo
</h1>,
            ],
            "className": "Roshambo-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "Roshambo-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to Roshambo",
                "className": "Roshambo-title",
              },
              "ref": null,
              "rendered": "Welcome to Roshambo",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "To get started, edit ",
              <code>
                src/Roshambo.js
</code>,
              " and save to reload.",
            ],
            "className": "Roshambo-intro",
          },
          "ref": null,
          "rendered": Array [
            "To get started, edit ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "src/Roshambo.js",
              },
              "ref": null,
              "rendered": "src/Roshambo.js",
              "type": "code",
            },
            " and save to reload.",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Player
                playerChoice={[Function]}
/>,
              <Scoreboard
                resetGame={[Function]}
                score={
                                Object {
                                                "draw": 0,
                                                "loss": 0,
                                                "win": 0,
                                              }
                }
/>,
              <Computer />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "playerChoice": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "resetGame": [Function],
                "score": Object {
                  "draw": 0,
                  "loss": 0,
                  "win": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
